#ifndef SSD1306_H
#define SSD1306_H

#include <SPI.h>

#define I2C_OLED 0
#define SPI_OLED 1

// See page 20 of datasheet for I2C interface description
#define SSD1306_I2C_ADDR 0x3C

#define SSD1306_I2C_COMMAND 0x00
#define SSD1306_I2C_DATA 0x40


#define COMMAND_MODE PORTB &= ~(0b00000010);
#define DATA_MODE PORTB |= 0b00000010;

#define CS_LOW PORTB &= ~(0b00000100);
#define CS_HIGH PORTB |= 0b00000100;

#define RESET_LOW PORTB &= ~(0b00000001);
#define RESET_HIGH PORTB |= 0b00000001;

/* Port B is pin D8-D13
Arduino                OLED
  D8:  reset           Res
  D9:  D/C             DC
  D10: CS              CS
  D11: MOSI            D1
  (D12: MISO) unused   
  D13: SCK             D0
*/


void oled_setup(int width_, int height_);
void oled_clear();
void oled_setTestPattern();
void oled_writeFont();

void oled_setWriteAddress(byte x, byte y);
void oled_writeString(const char* string);
void oled_writeText(const char* string, byte x, byte y);


/*
//static const uint8_t font[][6] PROGMEM = {
//const uint8_t font[][6] PROGMEM = {
//const PROGMEM uint8_t font[][6] = {
const uint8_t font[][5] = {
                        {0x00, 0x00, 0x00, 0x00, 0x00}, // space // 1
                        {0x00, 0x00, 0x5F, 0x00, 0x00}, // !
                        {0x00, 0x03, 0x00, 0x03, 0x00}, // "
                        {0x14, 0x7F, 0x14, 0x7F, 0x14}, // #
                        {0x26, 0x49, 0x7F, 0x49, 0x32}, // $
                        {0x63, 0x13, 0x08, 0x64, 0x63}, // %
                        {0x36, 0x49, 0x51, 0x30, 0x48}, // &
                        {0x00, 0x03, 0x00, 0x00, 0x00}, // '
                        {0x00, 0x3E, 0x41, 0x00, 0x00}, // (
                        {0x00, 0x00, 0x41, 0x3E, 0x00}, // ) // 10
                        {0x00, 0x07, 0x05, 0x07, 0x00}, // *
                        {0x08, 0x08, 0x3E, 0x08, 0x08}, // +
                        {0x00, 0x40, 0x30, 0x00, 0x00}, // ,
                        {0x08, 0x08, 0x08, 0x08, 0x00}, // -
                        {0x00, 0x40, 0x00, 0x00, 0x00}, // .
                        {0x00, 0x60, 0x18, 0x06, 0x00}, // /
                        {0x3E, 0x51, 0x49, 0x45, 0x3E}, // 0
                        {0x00, 0x42, 0x7F, 0x40, 0x00}, // 1
                        {0x42, 0x61, 0x51, 0x49, 0x46}, // 2
                        {0x22, 0x41, 0x49, 0x49, 0x36}, // 3 // 20
                        {0x18, 0x14, 0x12, 0x7F, 0x10}, // 4
                        {0x07, 0x49, 0x49, 0x49, 0x30}, // 5
                        {0x3E, 0x49, 0x49, 0x49, 0x30}, // 6
                        {0x01, 0x01, 0x01, 0x01, 0x7F}, // 7
                        {0x36, 0x49, 0x49, 0x49, 0x36}, // 8
                        {0x06, 0x49, 0x49, 0x49, 0x3E}, // 9
                        {0x00, 0x00, 0x24, 0x00, 0x00}, // :
                        {0x00, 0x40, 0x34, 0x00, 0x00}, // ;
                        {0x08, 0x14, 0x22, 0x41, 0x00}, // <
                        {0x00, 0x14, 0x14, 0x14, 0x14}, // = // 30
                        {0x00, 0x41, 0x22, 0x14, 0x08}, // >
                        {0x00, 0x02, 0x59, 0x06, 0x00}, // ?
                        {0x3E, 0x41, 0x49, 0x55, 0x1F}, // @ // 33
                        {0x7E, 0x09, 0x09, 0x09, 0x7E}, // A
                        {0x7F, 0x49, 0x49, 0x49, 0x36}, // B
                        {0x3E, 0x41, 0x41, 0x41, 0x22}, // C
                        {0x7F, 0x41, 0x41, 0x41, 0x3E}, // D
                        {0x7F, 0x49, 0x49, 0x49, 0x41}, // E
                        {0x7F, 0x09, 0x09, 0x09, 0x01}, // F
                        {0x3E, 0x41, 0x49, 0x49, 0x39}, // G // 40
                        {0x7F, 0x08, 0x08, 0x08, 0x7F}, // H
                        {0x00, 0x41, 0x7F, 0x41, 0x00}, // I
                        {0x21, 0x41, 0x41, 0x41, 0x3F}, // J
                        {0x7F, 0x08, 0x08, 0x08, 0x77}, // K
                        {0x7F, 0x40, 0x40, 0x40, 0x40}, // L
                        {0x7F, 0x02, 0x0E, 0x02, 0x7F}, // M
                        {0x7F, 0x02, 0x1C, 0x20, 0x7F}, // N
                        {0x3E, 0x41, 0x41, 0x41, 0x3E}, // O
                        {0x7F, 0x09, 0x09, 0x09, 0x06}, // P
                        {0x3E, 0x41, 0x51, 0x61, 0x3E}, // Q // 50
                        {0x7F, 0x09, 0x09, 0x09, 0x76}, // R
                        {0x46, 0x49, 0x49, 0x49, 0x31}, // S
                        {0x01, 0x01, 0x7F, 0x01, 0x01}, // T
                        {0x3F, 0x40, 0x40, 0x40, 0x3F}, // U
                        {0x07, 0x38, 0x60, 0x38, 0x07}, // V
                        {0x3F, 0x40, 0x38, 0x40, 0x3F}, // W
                        {0x63, 0x14, 0x08, 0x14, 0x63}, // X
                        {0x07, 0x08, 0x70, 0x08, 0x07}, // Y
                        {0x61, 0x51, 0x49, 0x45, 0x43}, // Z // 59
                        {0x00, 0x7F, 0x41, 0x00, 0x00}, // [
                        {0x00, 0x06, 0x18, 0x60, 0x00}, // backslash
                        {0x00, 0x41, 0x7F, 0x00, 0x00}, // ]
                        {0x04, 0x02, 0x01, 0x02, 0x04}, // ^
                        {0x40, 0x40, 0x40, 0x40, 0x40}, // _
                        {0x00, 0x01, 0x02, 0x00, 0x00}, // ` // 65
                        {0x38, 0x44, 0x44, 0x28, 0x7C}, // a
                        {0x7F, 0x44, 0x44, 0x44, 0x38}, // b
                        {0x38, 0x44, 0x44, 0x44, 0x00}, // c
                        {0x38, 0x44, 0x44, 0x44, 0x7F}, // d
                        {0x38, 0x54, 0x54, 0x54, 0x08}, // e // 70
                        {0x00, 0x7E, 0x09, 0x02, 0x00}, // f
                        {0x4C, 0x92, 0x92, 0x92, 0x7C}, // g
                        {0x7F, 0x08, 0x08, 0x08, 0x70}, // h
                        {0x00, 0x48, 0x7A, 0x40, 0x00}, // i
                        {0x00, 0x80, 0x88, 0x7A, 0x00}, // j
                        {0x00, 0x7F, 0x10, 0x28, 0x44}, // k
                        {0x00, 0x3F, 0x40, 0x40, 0x00}, // l
                        {0x78, 0x08, 0x78, 0x08, 0x78}, // m
                        {0x00, 0x78, 0x08, 0x78, 0x00}, // n
                        {0x38, 0x44, 0x44, 0x44, 0x38}, // o // 80
                        {0xFC, 0x22, 0x22, 0x22, 0x1C}, // p
                        {0x1C, 0x22, 0x22, 0x22, 0xFC}, // q
                        {0x00, 0x7C, 0x08, 0x04, 0x00}, // r
                        {0x48, 0x54, 0x54, 0x24, 0x00}, // s
                        {0x00, 0x04, 0x3F, 0x44, 0x20}, // t
                        {0x3C, 0x40, 0x40, 0x20, 0x7C}, // u
                        {0x18, 0x20, 0x40, 0x20, 0x18}, // v
                        {0x38, 0x40, 0x38, 0x40, 0x38}, // w
                        {0x00, 0x48, 0x30, 0x30, 0x48}, // x
                        {0x8C, 0x50, 0x20, 0x10, 0x0C}, // y // 90
                        {0x00, 0x48, 0x68, 0x58, 0x48}, // z

                        {0x7C, 0x46, 0x7E, 0x00, 0x00}, // representing LMB // 92
                        {0x00, 0x00, 0x7E, 0x46, 0x7C}, // representing RMB // 93
                        {0x00, 0x00, 0x1C, 0x00, 0x00}, // representing MMB // 94
                        {0x04, 0x02, 0x6F, 0x02, 0x04}, // representing SCRLUP // 95
                        {0x10, 0x20, 0x7B, 0x20, 0x10}, // representing SCRLDWN // 96
                        {0x62, 0x15, 0x00, 0x6F, 0x4A}, // representing CTRL // 97
                        {0x08, 0x3C, 0x26, 0x3C, 0x08}, // representing Shift // 98
                        {0x70, 0x46, 0x11, 0x76, 0x10}  // representing ALT // 99

                        };// __attribute__(PROGMEM);
*/

// Cant have 2D arrays in progmem, so defining tons of 1D arrays instead
const uint8_t font_char_space[5]       PROGMEM = {0x00, 0x00, 0x00, 0x00, 0x00}; // space // 0
const uint8_t font_char_exclamation[5] PROGMEM = {0x00, 0x00, 0x5F, 0x00, 0x00}; // !
const uint8_t font_char_doublequote[5] PROGMEM = {0x00, 0x03, 0x00, 0x03, 0x00}; // "
const uint8_t font_char_hash[5]        PROGMEM = {0x14, 0x7F, 0x14, 0x7F, 0x14}; // #
const uint8_t font_char_dollar[5]      PROGMEM = {0x26, 0x49, 0x7F, 0x49, 0x32}; // $
const uint8_t font_char_percent[5]     PROGMEM = {0x63, 0x13, 0x08, 0x64, 0x63}; // %
const uint8_t font_char_and[5]         PROGMEM = {0x36, 0x49, 0x51, 0x30, 0x48}; // &
const uint8_t font_char_singlequote[5] PROGMEM = {0x00, 0x03, 0x00, 0x00, 0x00}; // '
const uint8_t font_char_openpar[5]     PROGMEM = {0x00, 0x3E, 0x41, 0x00, 0x00}; // (
const uint8_t font_char_closepar[5]    PROGMEM = {0x00, 0x00, 0x41, 0x3E, 0x00}; // )
const uint8_t font_char_star[5]        PROGMEM = {0x00, 0x07, 0x05, 0x07, 0x00}; // * // 10
const uint8_t font_char_plus[5]        PROGMEM = {0x08, 0x08, 0x3E, 0x08, 0x08}; // +
const uint8_t font_char_comma[5]       PROGMEM = {0x00, 0x40, 0x30, 0x00, 0x00}; // ,
const uint8_t font_char_minus[5]       PROGMEM = {0x08, 0x08, 0x08, 0x08, 0x00}; // -
const uint8_t font_char_dot[5]         PROGMEM = {0x00, 0x40, 0x00, 0x00, 0x00}; // .
const uint8_t font_char_slash[5]       PROGMEM = {0x00, 0x60, 0x18, 0x06, 0x00}; // /
const uint8_t font_char_0[5]           PROGMEM = {0x3E, 0x51, 0x49, 0x45, 0x3E}; // 0
const uint8_t font_char_1[5]           PROGMEM = {0x00, 0x42, 0x7F, 0x40, 0x00}; // 1
const uint8_t font_char_2[5]           PROGMEM = {0x42, 0x61, 0x51, 0x49, 0x46}; // 2
const uint8_t font_char_3[5]           PROGMEM = {0x22, 0x41, 0x49, 0x49, 0x36}; // 3
const uint8_t font_char_4[5]           PROGMEM = {0x18, 0x14, 0x12, 0x7F, 0x10}; // 4 // 20
const uint8_t font_char_5[5]           PROGMEM = {0x07, 0x49, 0x49, 0x49, 0x30}; // 5
const uint8_t font_char_6[5]           PROGMEM = {0x3E, 0x49, 0x49, 0x49, 0x30}; // 6
const uint8_t font_char_7[5]           PROGMEM = {0x01, 0x01, 0x01, 0x01, 0x7F}; // 7
const uint8_t font_char_8[5]           PROGMEM = {0x36, 0x49, 0x49, 0x49, 0x36}; // 8
const uint8_t font_char_9[5]           PROGMEM = {0x06, 0x49, 0x49, 0x49, 0x3E}; // 9
const uint8_t font_char_colon[5]       PROGMEM = {0x00, 0x00, 0x24, 0x00, 0x00}; // :
const uint8_t font_char_semicol[5]     PROGMEM = {0x00, 0x40, 0x34, 0x00, 0x00}; // ;
const uint8_t font_char_lessth[5]      PROGMEM = {0x08, 0x14, 0x22, 0x41, 0x00}; // <
const uint8_t font_char_equals[5]      PROGMEM = {0x00, 0x14, 0x14, 0x14, 0x14}; // =
const uint8_t font_char_greath[5]      PROGMEM = {0x00, 0x41, 0x22, 0x14, 0x08}; // > // 30
const uint8_t font_char_quest[5]       PROGMEM = {0x00, 0x02, 0x59, 0x06, 0x00}; // ?
const uint8_t font_char_at[5]          PROGMEM = {0x3E, 0x41, 0x49, 0x55, 0x1F}; // @ // 32
const uint8_t font_char_A[5]           PROGMEM = {0x7E, 0x09, 0x09, 0x09, 0x7E}; // A
const uint8_t font_char_B[5]           PROGMEM = {0x7F, 0x49, 0x49, 0x49, 0x36}; // B
const uint8_t font_char_C[5]           PROGMEM = {0x3E, 0x41, 0x41, 0x41, 0x22}; // C
const uint8_t font_char_D[5]           PROGMEM = {0x7F, 0x41, 0x41, 0x41, 0x3E}; // D
const uint8_t font_char_E[5]           PROGMEM = {0x7F, 0x49, 0x49, 0x49, 0x41}; // E
const uint8_t font_char_F[5]           PROGMEM = {0x7F, 0x09, 0x09, 0x09, 0x01}; // F
const uint8_t font_char_G[5]           PROGMEM = {0x3E, 0x41, 0x49, 0x49, 0x39}; // G
const uint8_t font_char_H[5]           PROGMEM = {0x7F, 0x08, 0x08, 0x08, 0x7F}; // H // 40
const uint8_t font_char_I[5]           PROGMEM = {0x00, 0x41, 0x7F, 0x41, 0x00}; // I
const uint8_t font_char_J[5]           PROGMEM = {0x21, 0x41, 0x41, 0x41, 0x3F}; // J
const uint8_t font_char_K[5]           PROGMEM = {0x7F, 0x08, 0x08, 0x08, 0x77}; // K
const uint8_t font_char_L[5]           PROGMEM = {0x7F, 0x40, 0x40, 0x40, 0x40}; // L
const uint8_t font_char_M[5]           PROGMEM = {0x7F, 0x02, 0x0E, 0x02, 0x7F}; // M
const uint8_t font_char_N[5]           PROGMEM = {0x7F, 0x02, 0x1C, 0x20, 0x7F}; // N
const uint8_t font_char_O[5]           PROGMEM = {0x3E, 0x41, 0x41, 0x41, 0x3E}; // O
const uint8_t font_char_P[5]           PROGMEM = {0x7F, 0x09, 0x09, 0x09, 0x06}; // P
const uint8_t font_char_Q[5]           PROGMEM = {0x3E, 0x41, 0x51, 0x61, 0x3E}; // Q
const uint8_t font_char_R[5]           PROGMEM = {0x7F, 0x09, 0x09, 0x09, 0x76}; // R // 50
const uint8_t font_char_S[5]           PROGMEM = {0x46, 0x49, 0x49, 0x49, 0x31}; // S
const uint8_t font_char_T[5]           PROGMEM = {0x01, 0x01, 0x7F, 0x01, 0x01}; // T
const uint8_t font_char_U[5]           PROGMEM = {0x3F, 0x40, 0x40, 0x40, 0x3F}; // U
const uint8_t font_char_V[5]           PROGMEM = {0x07, 0x38, 0x60, 0x38, 0x07}; // V
const uint8_t font_char_W[5]           PROGMEM = {0x3F, 0x40, 0x38, 0x40, 0x3F}; // W
const uint8_t font_char_X[5]           PROGMEM = {0x63, 0x14, 0x08, 0x14, 0x63}; // X
const uint8_t font_char_Y[5]           PROGMEM = {0x07, 0x08, 0x70, 0x08, 0x07}; // Y
const uint8_t font_char_Z[5]           PROGMEM = {0x61, 0x51, 0x49, 0x45, 0x43}; // Z
const uint8_t font_char_brackopen[5]   PROGMEM = {0x00, 0x7F, 0x41, 0x00, 0x00}; // [ // 59
const uint8_t font_char_backslash[5]   PROGMEM = {0x00, 0x06, 0x18, 0x60, 0x00}; // backslash
const uint8_t font_char_blackclose[5]  PROGMEM = {0x00, 0x41, 0x7F, 0x00, 0x00}; // ]
const uint8_t font_char_circum[5]      PROGMEM = {0x04, 0x02, 0x01, 0x02, 0x04}; // ^
const uint8_t font_char_underscore[5]  PROGMEM = {0x40, 0x40, 0x40, 0x40, 0x40}; // _
const uint8_t font_char_tickmark[5]    PROGMEM = {0x00, 0x01, 0x02, 0x00, 0x00}; // `
const uint8_t font_char_a[5]           PROGMEM = {0x38, 0x44, 0x44, 0x28, 0x7C}; // a // 65
const uint8_t font_char_b[5]           PROGMEM = {0x7F, 0x44, 0x44, 0x44, 0x38}; // b
const uint8_t font_char_c[5]           PROGMEM = {0x38, 0x44, 0x44, 0x44, 0x00}; // c
const uint8_t font_char_d[5]           PROGMEM = {0x38, 0x44, 0x44, 0x44, 0x7F}; // d
const uint8_t font_char_e[5]           PROGMEM = {0x38, 0x54, 0x54, 0x54, 0x08}; // e
const uint8_t font_char_f[5]           PROGMEM = {0x00, 0x7E, 0x09, 0x02, 0x00}; // f // 70
const uint8_t font_char_g[5]           PROGMEM = {0x4C, 0x92, 0x92, 0x92, 0x7C}; // g
const uint8_t font_char_h[5]           PROGMEM = {0x7F, 0x08, 0x08, 0x08, 0x70}; // h
const uint8_t font_char_i[5]           PROGMEM = {0x00, 0x48, 0x7A, 0x40, 0x00}; // i
const uint8_t font_char_j[5]           PROGMEM = {0x00, 0x80, 0x88, 0x7A, 0x00}; // j
const uint8_t font_char_k[5]           PROGMEM = {0x00, 0x7F, 0x10, 0x28, 0x44}; // k
const uint8_t font_char_l[5]           PROGMEM = {0x00, 0x3F, 0x40, 0x40, 0x00}; // l
const uint8_t font_char_m[5]           PROGMEM = {0x78, 0x08, 0x78, 0x08, 0x78}; // m
const uint8_t font_char_n[5]           PROGMEM = {0x00, 0x78, 0x08, 0x78, 0x00}; // n
const uint8_t font_char_o[5]           PROGMEM = {0x38, 0x44, 0x44, 0x44, 0x38}; // o
const uint8_t font_char_p[5]           PROGMEM = {0xFC, 0x22, 0x22, 0x22, 0x1C}; // p // 80
const uint8_t font_char_q[5]           PROGMEM = {0x1C, 0x22, 0x22, 0x22, 0xFC}; // q
const uint8_t font_char_r[5]           PROGMEM = {0x00, 0x7C, 0x08, 0x04, 0x00}; // r
const uint8_t font_char_s[5]           PROGMEM = {0x48, 0x54, 0x54, 0x24, 0x00}; // s
const uint8_t font_char_t[5]           PROGMEM = {0x04, 0x3F, 0x44, 0x20, 0x00}; // t
const uint8_t font_char_u[5]           PROGMEM = {0x3C, 0x40, 0x40, 0x20, 0x7C}; // u
const uint8_t font_char_v[5]           PROGMEM = {0x18, 0x20, 0x40, 0x20, 0x18}; // v
const uint8_t font_char_w[5]           PROGMEM = {0x38, 0x40, 0x38, 0x40, 0x38}; // w
const uint8_t font_char_x[5]           PROGMEM = {0x00, 0x48, 0x30, 0x30, 0x48}; // x
const uint8_t font_char_y[5]           PROGMEM = {0x8C, 0x50, 0x20, 0x10, 0x0C}; // y
const uint8_t font_char_z[5]           PROGMEM = {0x00, 0x48, 0x68, 0x58, 0x48}; // z // 90 // ASCII 122

const uint8_t font_char_lmb[5]         PROGMEM = {0x7C, 0x46, 0x7E, 0x00, 0x00}; // representing LMB // 91
const uint8_t font_char_rmb[5]         PROGMEM = {0x00, 0x00, 0x7E, 0x46, 0x7C}; // representing RMB // 92
const uint8_t font_char_mmb[5]         PROGMEM = {0x00, 0x00, 0x1C, 0x00, 0x00}; // representing MMB // 93
const uint8_t font_char_scrl_up[5]     PROGMEM = {0x04, 0x02, 0x6F, 0x02, 0x04}; // representing SCRLUP // 94
const uint8_t font_char_scrl_dwn[5]    PROGMEM = {0x10, 0x20, 0x7B, 0x20, 0x10}; // representing SCRLDWN // 95 // ASCII 127
const uint8_t font_char_ctrl[5]        PROGMEM = {0x62, 0x15, 0x00, 0x6F, 0x4A}; // representing CTRL // 96
const uint8_t font_char_shift[5]       PROGMEM = {0x08, 0x3C, 0x26, 0x3C, 0x08}; // representing Shift // 97
const uint8_t font_char_alt[5]         PROGMEM = {0x70, 0x46, 0x11, 0x76, 0x10}; // representing ALT // 98
const uint8_t font_char_degree[5]      PROGMEM = {0x07, 0x05, 0x07, 0x00, 0x00}; // representing degree // 99


const uint8_t* const font[] PROGMEM = {
    font_char_space, font_char_exclamation, font_char_doublequote, font_char_hash, font_char_dollar,
    font_char_percent, font_char_and, font_char_singlequote, font_char_openpar, font_char_closepar,
    font_char_star, font_char_plus, font_char_comma, font_char_minus, font_char_dot, font_char_slash,
    font_char_0, font_char_1, font_char_2, font_char_3, font_char_4, font_char_5, font_char_6, font_char_7,
    font_char_8, font_char_9, font_char_colon, font_char_semicol, font_char_lessth, font_char_equals,
    font_char_greath, font_char_quest, font_char_at, font_char_A, font_char_B, font_char_C, font_char_D,
    font_char_E, font_char_F, font_char_G, font_char_H, font_char_I, font_char_J, font_char_K, font_char_L,
    font_char_M, font_char_N, font_char_O, font_char_P, font_char_Q, font_char_R, font_char_S, font_char_T,
    font_char_U, font_char_V, font_char_W, font_char_X, font_char_Y, font_char_Z, font_char_brackopen,
    font_char_backslash, font_char_blackclose, font_char_circum, font_char_underscore, font_char_tickmark,
    font_char_a, font_char_b, font_char_c, font_char_d, font_char_e, font_char_f, font_char_g, font_char_h,
    font_char_i, font_char_j, font_char_k, font_char_l, font_char_m, font_char_n, font_char_o, font_char_p,
    font_char_q, font_char_r, font_char_s, font_char_t, font_char_u, font_char_v, font_char_w, font_char_x,
    font_char_y, font_char_z, font_char_lmb, font_char_rmb, font_char_mmb, font_char_scrl_up,
    font_char_scrl_dwn, font_char_ctrl, font_char_shift, font_char_alt, font_char_degree, };


/*
void initScroll_SPI();
void startScroll_SPI();
void stopScroll_SPI();

void setWriteRect_I2C(byte x, byte y, byte lx, byte ly);
*/








#endif

/*
 ____________
|    ##    --|
|  ####    --|
|    ##    --|
|    ##    --|
|    ##    --|
|    ##    --|
|  ######  --|
|------------|  0x00, 0x42, 0x7F, 0x40, 0x00

 ____________    ____________
|    ##    --|  |  ######  --|
|  ##  ##  --|  |##      ##--|
|      ##  --|  |        ##--|
|      ##  --|  |      ##  --|
|    ##    --|  |    ##    --|
|  ##      --|  |  ##      --|
|  ######  --|  |##########--|
|------------|  |------------|

LMB
  ____________
 |          --|
 |  ####    --|
 |######    --|
 |##  ##    --|
 |##  ##    --|
 |##  ##    --|
 |######    --|
 |------------|  0x7C, 0x46, 0x7E, 0x00, 0x00

RMB
  ____________
 |          --|
 |    ####  --|
 |    ######--|
 |    ##  ##--|
 |    ##  ##--|
 |    ##  ##--|
 |    ######--|
 |------------|  0x00, 0x00, 0x7E, 0x46, 0x7C

MMB
  ____________
 |          --|
 |          --|
 |    ##    --|
 |    ##    --|
 |    ##    --|
 |          --|
 |          --|
 |------------|  0x00, 0x00, 0x1C, 0x00, 0x00

Mousewheel scroll up
  ____________
 |    ##    --|
 |  ######  --|
 |##  ##  ##--|
 |    ##    --|
 |          --|
 |    ##    --|
 |    ##    --|
 |------------|  0x04, 0x02, 0x6F, 0x02, 0x04

Mousewheel scroll down
  ____________
 |    ##    --|
 |    ##    --|
 |          --|
 |    ##    --|
 |##  ##  ##--|
 |  ######  --|
 |    ##    --|
 |------------|  0x10, 0x20, 0x7B, 0x20, 0x10

CTRL
  ____________
 |  ##  ##  --|
 |##    ####--|
 |  ##  ##  --|
 |      ####--|
 |  ##      --|
 |##    ##  --|
 |##    ####--|
 |------------|  0x62, 0x15, 0x00, 0x6F, 0x4A

Shift
  ____________
 |          --|
 |    ##    --|
 |  ######  --|
 |####  ####--|
 |  ##  ##  --|
 |  ######  --|
 |          --|
 |------------|  0x08, 0x3C, 0x26, 0x3C, 0x08

Alt
  ____________
 |    ##    --|
 |  ##  ##  --|
 |  ##  ##  --|
 |          --|
 |##  ######--|
 |##    ##  --|
 |####  ##  --|
 |------------|  0x70, 0x46, 0x11, 0x76, 0x10

*/
